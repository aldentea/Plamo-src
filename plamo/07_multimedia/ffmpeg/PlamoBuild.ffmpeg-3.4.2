#!/bin/sh
##############################################################
pkgbase='ffmpeg'
vers='3.4.2'
url="http://ffmpeg.org/releases/${pkgbase}-${vers}.tar.xz"
verify="${url}.asc"
arch=`uname -m`
build=B3
src="${pkgbase}-${vers}"
# 高品質のAACコーデックライブラリを使いたい場合は
# --enable-libfdk-aac
# をつけてビルドしてください。バイナリ配布は不可なので含めてません
# ffmpeg 付属の AAC コーデックは含まれているはず
# See. https://trac.ffmpeg.org/wiki/Encode/AAC
OPT_CONFIG="--enable-gpl
            --enable-version3
            --disable-static
            --enable-shared
            --disable-debug
            --enable-libass
            --enable-libfreetype
            --enable-libmp3lame
            --enable-libopus
            --enable-libtheora
            --enable-libvorbis
            --enable-libvpx
            --enable-libx264
            --enable-libx265
	    --enable-libwebp
	    --enable-libpulse
	    --enable-libspeex
	    --enable-libv4l2
	    --enable-libxvid
	    --enable-gnutls
	    --disable-libfdk-aac
	    --disable-nonfree
            --docdir=/usr/share/doc/ffmpeg-${vers}"
DOCS='COPYING.GPLv2 COPYING.GPLv3 COPYING.LGPLv2.1 COPYING.LGPLv3 Changelog INSTALL.md LICENSE.md MAINTAINERS README.md RELEASE RELEASE_NOTES'
patchfiles=''
compress=txz
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build{,32})
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)


if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
  download_sources
fi

if [ $opt_config -eq 1 ] ; then
  if [ -d $B ] ; then rm -rf $B ; fi ; mkdir -p $B 
######################################################################
#  don't copy sources, so need patch in the src dir
######################################################################
  cd $S
  for patch in $patchfiles ; do
    if [ ! -f .${patch} ]; then
      patch -p1 < $W/$patch
      touch .${patch}
    fi
  done
  # if [ -f autogen.sh ] ; then
  #   sh ./autogen.sh
  # fi

  cd $B
  export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig:/opt/kde/${libdir}/pkgconfig
  export LDFLAGS='-Wl,--as-needed' 
  $S/configure --prefix=/usr --mandir='${prefix}'/share/man ${OPT_CONFIG}
    
  if [ $? != 0 ]; then
    echo "configure error. $0 script stop"
    exit 255
  fi
fi
    
if [ $opt_build -eq 1 ] ; then
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make -j3
  if [ $? != 0 ]; then
    echo "build error. $0 script stop"
    exit 255
  fi
  cp -a $S/tools $B/tools
  gcc tools/qt-faststart.c -o tools/qt-faststart
  if [ $? != 0 ]; then
    echo "build error. $0 script stop"
    exit 255
  fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make install DESTDIR=$P

  install -v -m755 tools/qt-faststart $P/usr/bin
  install -v -m755 -d ${docdir}/${src}
  install -v -m644 doc/*.txt ${docdir}/${src}

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man, 
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and 
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
