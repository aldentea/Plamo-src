#!/bin/sh
##############################################################
pkgbase='alsa_tools'
vers='1.1.5'
url="ftp://ftp.alsa-project.org/pub/tools/alsa-tools-${vers}.tar.bz2"
digest="md5sum:3afb92eb1b4f2edc8691498e57c3ec78"
verify=""
arch=`uname -m`
build=B1
src="alsa-tools-${vers}"
OPT_CONFIG='--disable-static --enable-shared'
DOCS=''
patchfiles=''
compress=txz
##############################################################

_tools=("echomixer" "hdajackretask" "hdspconf" "hdspmixer" "ld10k1"
	"pcxhrloader" "rmedigicontrol" "seq/sbiload" "us428control"
	"vxloader" "as10k1" "envy24control" "hda-verb" "hdajacksensetest"
	"hdsploader" "hwmixvolume" "mixartloader" "sb16_csp"
	"sscape_ctl"  "usx2yloader")

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build{,32})
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)


if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
  download_sources
fi

if [ $opt_config -eq 1 ] ; then
  if [ -d $B ] ; then rm -rf $B ; fi ; cp -a $S $B
######################################################################
#  don't copy sources, so need patch in the src dir
######################################################################
  cd $B
  for patch in $patchfiles ; do
    patch -p1 < $W/$patch
  done
  # if [ -f autogen.sh ] ; then
  #   sh ./autogen.sh
  # fi

  for t in ${_tools[@]}
  do
    pushd $t
    export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig:/opt/kde/${libdir}/pkgconfig
    export LDFLAGS='-Wl,--as-needed' 
    ./configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var --mandir='${prefix}'/share/man ${OPT_CONFIG}
    
    if [ $? != 0 ]; then
      echo "configure error. $0 script stop"
      exit 255
    fi
    popd
  done
fi
    
if [ $opt_build -eq 1 ] ; then
  cd $B

  for t in ${_tools[@]}
  do
    pushd $t
    export LDFLAGS='-Wl,--as-needed'
    make -j3
    if [ $? != 0 ]; then
      echo "build error. $0 script stop"
      exit 255
    fi
    popd
  done
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B

  for t in ${_tools[@]}
  do
    pushd $t
    export LDFLAGS='-Wl,--as-needed'
    make install DESTDIR=$P
    popd
  done

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man, 
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and 
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
