--- ./src/ffmpeg.c.ffmpeg	2013-03-17 01:21:32.579659750 -0300
+++ ./src/ffmpeg.c	2013-03-17 01:42:13.638126407 -0300
@@ -57,6 +57,10 @@
 #define PKT_FLAG_KEY AV_PKT_FLAG_KEY
 #endif
 
+#ifndef AVCODEC_MAX_AUDIO_FRAME_SIZE
+#define AVCODEC_MAX_AUDIO_FRAME_SIZE (192000 * 4)
+#endif
+
 /* Private data for ffmpeg files */
 typedef struct {
   int audio_index;
@@ -137,8 +141,13 @@ static int audio_decode_frame(priv_t * f
     /* NOTE: the audio packet can contain several frames */
     while (ffmpeg->audio_pkt.size > 0) {
       data_size = buf_size;
+#if LIBAVCODEC_VERSION_INT >= AV_VERSION_INT(55, 0, 0)
+      len1 = avcodec_decode_audio4(ffmpeg->audio_st->codec,
+				   (AVFrame *)audio_buf, &data_size,
+#else
       len1 = avcodec_decode_audio3(ffmpeg->audio_st->codec,
 				   (int16_t *)audio_buf, &data_size,
+#endif
 				   pkt);
       if (len1 < 0) /* if error, we skip the rest of the packet */
 	return 0;
@@ -258,7 +267,7 @@ static int stopread(sox_format_t * ft)
   if (ffmpeg->audio_stream >= 0)
     stream_component_close(ffmpeg, ffmpeg->audio_stream);
   if (ffmpeg->ctxt) {
-    av_close_input_file(ffmpeg->ctxt);
+    avformat_close_input(ffmpeg->ctxt);
     ffmpeg->ctxt = NULL; /* safety */
   }
 
@@ -269,7 +278,7 @@ static int stopread(sox_format_t * ft)
 /*
  * add an audio output stream
  */
-static AVStream *add_audio_stream(sox_format_t * ft, AVFormatContext *oc, enum CodecID codec_id)
+static AVStream *add_audio_stream(sox_format_t * ft, AVFormatContext *oc, enum AVCodecID codec_id)
 {
   AVCodecContext *c;
   AVStream *st;
