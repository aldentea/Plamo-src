#!/bin/sh
##############################################################
pkgbase='pygobject2'
vers='2.28.7'
url="http://ftp.gnome.org/pub/gnome/sources/pygobject/${vers%.*}/pygobject-${vers}.tar.xz"
verify=""
arch=`uname -m`
build=B3
src="pygobject-${vers}"
OPT_CONFIG='--disable-introspection'
DOCS='AUTHORS COPYING ChangeLog ChangeLog.pre-2.18 INSTALL NEWS README README.win32 pygobject_postinstall.py'
patchfiles=''
compress=txz
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build{,32})
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)


if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
  download_sources
fi

if [ $opt_config -eq 1 ] ; then
  if [ -d $B ] ; then rm -rf $B ; fi
  for i in 2 3
  do
    mkdir -p $B/$i
    cp -a $S/* $B/$i/
######################################################################
#  don't copy sources, so need patch in the src dir
######################################################################
    cd $B/$i
    for patch in $patchfiles ; do
      patch -p1 < $W/$patch
    done
    find . \( -name '*.py' -o -name '*.py.in' \) -exec sed -i '1s|python$|&2|' {} +
    autoreconf -fvi

    PYTHON=/usr/bin/python$i ./configure --prefix=/usr ${OPT_CONFIG}
    
    if [ $? != 0 ]; then
      echo "configure error. $0 script stop"
      exit 255
    fi
  done
fi
    
if [ $opt_build -eq 1 ] ; then
  for i in 2 3
  do
    cd $B/$i
    export LDFLAGS='-Wl,--as-needed'
    make -j3
    if [ $? != 0 ]; then
      echo "build error. $0 script stop"
      exit 255
    fi
  done
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make -C 2 install DESTDIR=$P
  make -C 3 install DESTDIR=$P

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man, 
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and 
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
