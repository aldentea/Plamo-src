#!/bin/sh
##############################################################
pkgbase='perl'
vers='5.26.0'
url="http://www.cpan.org/src/5.0/${pkgbase}-${vers}.tar.xz"
digest="md5sum:8c6995718e4cb62188f0d5e3488cd91f"
arch=`uname -m`
build=B1
src="${pkgbase}-${vers}"
OPT_CONFIG='--disable-static --enable-shared'
DOCS='AUTHORS Copying INSTALL README README.aix README.amiga README.android README.bs2000 README.ce README.cn README.cygwin README.dos README.freebsd README.haiku README.hpux README.hurd README.irix README.jp README.ko README.linux README.macos README.macosx README.micro README.netware README.openbsd README.os2 README.os390 README.os400 README.plan9 README.qnx README.riscos README.solaris README.symbian README.synology README.tru64 README.tw README.vms README.vos README.win32 autodoc.pl install_lib.pl installhtml installman installperl'
patchfiles=''
compress=txz
##############################################################

export BUILD_ZLIB=False
export BUILD_BZIP2=0
export ARCH=$arch

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
# 
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build{,32})
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)


if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    download_sources
fi

if [ $opt_config -eq 1 ] ; then
    if [ -d $B ] ; then rm -rf $B ; fi ; cp -a $S $B  
######################################################################
#  copy sources into build directory, patch and make in the build dir
######################################################################
    cd $B
    for patch in $patchfiles ; do
       patch -p1 < $W/$patch
    done

    # if [ -f autogen.sh ] ; then
    #   sh ./autogen.sh
    # fi

    if [ $arch = "x86_64" ]; then
        arch_opts="-Dcccdlflags='-fPIC'"
    else
        arch_opts=""
    fi
    
    export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig:/opt/kde/${libdir}/pkgconfig
    export LDFLAGS='-Wl,--as-needed'
    sh Configure \
       -des \
       -Dprefix=/usr \
       -Dvendorprefix=/usr \
       -Dprivlib=/usr/share/perl5 \
       -Darchlib=/usr/${libdir}/perl5 \
       -Dsitelib=/usr/share/perl5/site_perl \
       -Dsitearch=/usr/${libdir}/perl5/site_perl \
       -Dvendorlib=/usr/share/perl5/vendor_perl \
       -Dvendorarch=/usr/${libdir}/perl5/vendor_perl \
       -Dman1dir=/usr/share/man/man1 \
       -Dman3dir=/usr/share/man/man3 \
       -Dpager="/usr/bin/less -isR"  \
       -Dcc='gcc -isystem /usr/include' \
       -Dlddlflags="-shared ${LDFLAGS}" \
       -Dldflags="${LDFLAGS}" \
       -Dusethreads \
       ${arch_opts} \
       -Duseshrplib
    
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
fi
    
if [ $opt_build -eq 1 ] ; then
    cd $B
    export LDFLAGS='-Wl,--as-needed'
    make
    if [ $? != 0 ]; then
	echo "build error. $0 script stop"
	exit 255
    fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make install DESTDIR=$P

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man, 
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and 
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
