#!/bin/sh
##############################################################
pkgbase="nginx"
vers="1.19.3"
url="https://nginx.org/download/${pkgbase}-${vers}.tar.gz"
verify="${url}.asc"
#digest=""
arch=`uname -m`
build=B1
src="${pkgbase}-${vers}"
OPT_CONFIG="--conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --modules-path=/usr/lib/nginx/modules --with-http_ssl_module --with-http_v2_module --with-threads --user=nginx --group=nginx"
DOCS="LICENSE README CHANGES"
patchfiles=""
compress=txz
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build)
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)

if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    download_sources
fi

if [ $opt_config -eq 1 ] ; then
######################################################################
#  out of tree build. patch apply in src dir
######################################################################
    if [ -d $B ] ; then rm -rf $B ; fi ; mkdir -p $B 
    echo $B
    cd $S
    for patch in $patchfiles ; do
        if [ ! -f .${patch} ]; then
            patch -p1 < $W/$patch
            touch .${patch}
        fi
    done
    #if [ -f autogen.sh ] ; then
    #  sh ./autogen.sh
    #fi
    cp -r $S $B
    cd ${B}/${src}
    export PKG_CONFIG_PATH=/usr/lib/pkgconfig:/usr/share/pkgconfig
    export LDFLAGS='-Wl,--as-needed' 
    ./configure --prefix=/usr ${OPT_CONFIG}
    #$S/configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var --mandir='${prefix}'/share/man ${OPT_CONFIG}
    cd $B
    if [ $? != 0 ]; then
        echo "configure error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_build -eq 1 ] ; then
    cd ${B}/${src} 
    export LDFLAGS='-Wl,--as-needed'
    make -j3
    if [ $? != 0 ]; then
        echo "build error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd ${B}/${src}

  export LDFLAGS='-Wl,--as-needed'
  make install DESTDIR=$P

  # logrotate
  install -Dm644 -v $W/nginx.logrotate $P/etc/logrotate.d/nginx.logrotate

  # init script
  install -Dm644 -v $W/nginx.init $P/etc/rc.d/init.d/nginx
  for i in $(seq 0 6)
  do
	  install -dm755 -v $P/etc/rc.d/rc${i}.d/
	  case $i in
		  0|1|2|6)
			  ln -svf ../init.d/nginx $P/etc/rc.d/rc${i}.d/K29nginx
			  ;;
		  3|4|5)
			  ln -svf ../init.d/nginx $P/etc/rc.d/rc${i}.d/S33nginx
			  ;;
	  esac
  done

  #plamo original to doc
  install -Dm644 -v $W/nginx.init $docdir/$src/nginx.init

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man,
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
