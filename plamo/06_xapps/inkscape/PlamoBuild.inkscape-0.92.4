#!/bin/sh
##############################################################
pkgbase='inkscape'
vers='0.92.4'
url="https://media.${pkgbase}.org/dl/resources/file/${pkgbase}-${vers}.tar.bz2"
verify=""
arch=`uname -m`
build=B2
src="${pkgbase}-${vers}"
OPT_CONFIG='-DCMAKE_BUILD_TYPE=Release'
DOCS='AUTHORS COPYING ChangeLog GPL2.txt GPL3.txt INSTALL LGPL2.1.txt NEWS README README.ca.txt README.de.txt README.es.txt README.fr.txt README.it.txt README.osx.txt README.pt_BR.txt README.sk.txt README.sr.txt'
blfspatches=( "http://www.linuxfromscratch.org/patches/blfs/svn/inkscape-${vers}-use_versioned_ImageMagick6-1.patch"
	      "http://www.linuxfromscratch.org/patches/blfs/svn/inkscape-${vers}-upstream_fixes-1.patch" )
patchfiles=""
compress=txz
##############################################################

# inkscape-0.92.3-poppler-gBool.patch は $blfspatches のあとに当てる用
# に作成しているために面倒なことをしている
for p in ${blfspatches[@]}
do
    patches="$patches ${p##*/}"
done
patchfiles="$patches $patchfiles"

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build{,32})
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)


if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
  download_sources
  for p in ${blfspatches[@]}
  do
    if [ ! -f ${p##*/} ]; then
      wget $p
    fi
  done
fi

if [ $opt_config -eq 1 ] ; then
  if [ -d $B ] ; then rm -rf $B ; fi ; mkdir -p $B 
######################################################################
#   patch apply to source tree but make at out of source tree
######################################################################
  cd $S
  for patch in $patchfiles ; do
    echo "patching... $patch"
    if [ ! -f .${patch} ]; then
      patch -p1 < $W/$patch
      touch .${patch}
    fi
  done
  cd $B
  export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig:/opt/kde/${libdir}/pkgconfig
  export LDFLAGS='-Wl,--as-needed' 
  cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr ${OPT_CONFIG} $S
  
  if [ $? != 0 ]; then
    echo "configure error. $0 script stop"
    exit 255
  fi
fi
    
if [ $opt_build -eq 1 ] ; then
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make -j3
  if [ $? != 0 ]; then
    echo "build error. $0 script stop"
    exit 255
  fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make install DESTDIR=$P
  rm -v $P/usr/${libdir}/inkscape/lib*_LIB.a

  mkdir -p $P/install
  cat <<EOF >> $P/install/initpkg
if [ -x /usr/bin/gtk-update-icon-cache ]; then
  /usr/bin/gtk-update-icon-cache
fi
if [ -x /usr/bin/update-desktop-database ]; then
  /usr/bin/update-desktop-database
fi
EOF

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man, 
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and 
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
