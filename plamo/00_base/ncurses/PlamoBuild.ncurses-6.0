#!/bin/sh
##############################################################
pkgbase='ncurses'
vers='6.0'
url="http://ftp.jaist.ac.jp/pub/GNU/${pkgbase}/${pkgbase}-${vers}.tar.gz"
verify="${url}.sig"
arch=`uname -m`
build=B2
src="${pkgbase}-${vers}"
OPT_CONFIG="--with-shared --without-debug --without-normal --enable-pc-files --enable-widec
			  --with-cxx-binding --with-cxx-shared
			  --with-manpage-format=normal"
DOCS='AUTHORS COPYING INSTALL NEWS README README.MinGW README.emx'
patchfiles=''
compress=txz
##############################################################

source /usr/share/plamobuild_functions.sh

OPT_CONFIG="$OPT_CONFIG --with-pkg-config-libdir=/usr/${libdir}/pkgconfig"

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build{,32})
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)


if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
  download_sources
fi

if [ $opt_config -eq 1 ] ; then
  if [ -d $B ] ; then rm -rf $B ; fi ; mkdir -p $B 
######################################################################
#  don't copy sources, so need patch in the src dir
######################################################################
  cd $S
  for patch in $patchfiles ; do
    if [ ! -f .${patch} ]; then
      patch -p1 < $W/$patch
      touch .${patch}
    fi
  done
  # if [ -f autogen.sh ] ; then
  #   sh ./autogen.sh
  # fi

  cd $B
  export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig:/opt/kde/${libdir}/pkgconfig
  export LDFLAGS='-Wl,--as-needed' 
  $S/configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var --mandir='${prefix}'/share/man ${OPT_CONFIG[$i]}
    
  if [ $? != 0 ]; then
    echo "configure error. $0 script stop"
    exit 255
  fi
fi
    
if [ $opt_build -eq 1 ] ; then
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make -j3
  if [ $? != 0 ]; then
    echo "build error. $0 script stop"
    exit 255
  fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make install DESTDIR=$P

  install -v -d $P/lib
  mv -v $P/usr/lib/libncursesw.so.6* $P/lib
  ln -sfv ../../lib/$(readlink $P/usr/lib/libncursesw.so) $P/usr/lib/libncursesw.so

  for lib in ncurses form panel menu ; do
    rm -vf                    $P/usr/lib/lib${lib}.so
    echo "INPUT(-l${lib}w)" > $P/usr/lib/lib${lib}.so
    ln -sfv ${lib}w.pc        $P/usr/lib/pkgconfig/${lib}.pc
  done

  rm -vf                     $P/usr/lib/libcursesw.so
  echo "INPUT(-lncursesw)" > $P/usr/lib/libcursesw.so
  ln -sfv libncurses.so      $P/usr/lib/libcurses.so

  install -v -d ${docdir}/${src}
  cp -v -R $S/doc/* $P/usr/share/doc/${src}

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man, 
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and 
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
