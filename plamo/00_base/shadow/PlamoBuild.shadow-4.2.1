#!/bin/sh
##############################################################
pkgbase='shadow'
vers='4.2.1'
url="http://pkg-shadow.alioth.debian.org/releases/shadow-${vers}.tar.xz"
arch=`uname -m`
build=P1
src="${pkgbase}-${vers}"
OPT_CONFIG='--sysconfdir=/etc --enable-man --without-selinux --with-libcrack'
DOCS='ABOUT-NLS COPYING ChangeLog NEWS README TODO'
patchfiles='tweak_pamd.patch update_login_defs.patch'
compress=txz
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
# 
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build{,32})
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)


if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    download_sources
fi

if [ $opt_config -eq 1 ] ; then
    if [ -d $B ] ; then rm -rf $B ; fi ; mkdir -p $B 
######################################################################
#  don't copy sources, so need patch in the src dir
######################################################################
    cd $S
    for patch in $patchfiles ; do
        if [ ! -f .${patch} ]; then
            patch -p1 < $W/$patch
            touch .${patch}
        fi
    done

    # do not make groups command, because coreutils has groups command
    sed -i 's/groups$(EXEEXT) //' src/Makefile.in

    # do not install groups.1, getspnam.3, passwd.5
    # because man_pages has those
    find man -name Makefile.in -exec sed -i 's/groups\.1 / /'   {} \;
    find man -name Makefile.in -exec sed -i 's/getspnam\.3 / /' {} \;
    find man -name Makefile.in -exec sed -i 's/passwd\.5 / /'   {} \;

    # change default group for useradd to 100 (from 1000)
    sed -i '/^GROUP=/s@1000@100@g' etc/useradd
    # do not create mail spool when useradd
    sed -i '/^CREATE_MAIL_SPOOL=/s@yes@no@g' etc/useradd

    cd $B
    # if [ -f $S/autogen.sh ] ; then
    #   sh ./autogen.sh
    # fi
    export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig:/opt/kde/${libdir}/pkgconfig
    export LDFLAGS='-Wl,--as-needed' 
    $S/configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var --mandir='${prefix}'/share/man ${OPT_CONFIG[$i]}
    
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
fi
    
if [ $opt_build -eq 1 ] ; then
    cd $B
    export LDFLAGS='-Wl,--as-needed'
    make -j3
    if [ $? != 0 ]; then
	echo "build error. $0 script stop"
	exit 255
    fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make install DESTDIR=$P

  # install adduser command
  install $W/shadow-adduser-20160122 $P/usr/sbin/adduser

  # convert japanese man pages to euc-jp
  install -d $mandir/ja_JP.eucJP/man{1,5,8}
  for i in `cd $mandir/ja ; find . -type f` ; do
      nkf -We $mandir/ja/$i > $mandir/ja_JP.eucJP/$i
  done
  mv $mandir/ja $mandir/ja_JP.UTF-8

  # initpkg
  mkdir -p $P/install
  cat <<- "EOF" >> $P/install/initpkg
if [ -z "`grep "^root:" /etc/shadow | cut -d: -f2`" ] ; then
  echo "root(システム管理者)のパスワードを設定してください。"
  until passwd root ; do
    echo "root(システム管理者)のパスワードを設定してください。"
  done
  echo "rootのパスワードの設定が完了しました。"
fi
EOF

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man, 
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and 
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
