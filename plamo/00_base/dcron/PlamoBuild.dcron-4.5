#!/bin/sh
##############################################################
pkgbase='dcron'
vers='4.5'
url="http://www.jimpryor.net/linux/releases/dcron-${vers}.tar.gz"
arch=`uname -m`
build=B4
src="dcron-${vers}"
OPT_CONFIG=""
DOCS='CHANGELOG CHANGELOG.working README'
patchfiles=''
compress=txz
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build{,32})
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)


if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
  download_sources
fi

if [ $opt_config -eq 1 ] ; then
  if [ -d $B ] ; then rm -rf $B ; fi ; cp -a $S $B
######################################################################
#  copy sources into build directory, patch and make in the build dir
######################################################################
  cd $B
  for patch in $patchfiles ; do
    patch -p1 < $W/$patch
  done

  # if [ -f autogen.sh ] ; then
  #   sh ./autogen.sh
  # fi
fi
    
if [ $opt_build -eq 1 ] ; then
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make PREFIX=/usr
  if [ $? != 0 ]; then
    echo "build error. $0 script stop"
    exit 255
  fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make install DESTDIR=$P

  install -dm755 -v $P/etc/cron.{hourly,daily,weekly,monthly}

  install -Dm755 -v extra/run-cron $P/usr/sbin/run-cron
  install -Dm755 -v extra/prune-cronstamps $P/etc/cron.d/prune-cronstamps
  install -Dm644 -v extra/crontab.vim $P/usr/share/vim/vimfiles/ftplugin/crontab.vim

  # Install crontab for root to $docdir temporally.
  # After the package is installed, crontab for root is copied if it don't exist
  install -Dm644 -v extra/root.crontab $docdir/$src/root.crontab

  install -Dm755 $W/dcron.init $P/etc/rc.d/init.d/crond
  install -Dm755 $W/dcron.init $docdir/$src/dcron.init
  for i in $(seq 0 6)
  do
    install -dm755 -v $P/etc/rc.d/rc"$i".d
    case $i in
      0|1|2|6)
	ln -sfv ../init.d/crond $P/etc/rc.d/rc"$i".d/K08crond
	;;
      3|4|5)
	ln -sfv ../init.d/crond $P/etc/rc.d/rc"$i".d/S40crond
	;;
    esac
  done

  mkdir -p $P/install
  cat <<EOF >> $P/install/initpkg
if [ ! -f /var/spool/cron/crontabs/root ]; then
   install -m600 -v /usr/share/doc/${pkgbase}-${vers}/root.crontab /var/spool/cron/crontabs/root
fi
EOF

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man, 
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and 
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
