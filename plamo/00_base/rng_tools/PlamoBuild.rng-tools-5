#!/bin/sh
##############################################################
pkgbase="rng_tools"
vers="5"
url="https://git.kernel.org/pub/scm/utils/kernel/rng-tools/rng-tools.git/snapshot/rng-tools-5.tar.gz"
arch=`uname -m`
build=B1
src="rng-tools-5"
OPT_CONFIG="--disable-static --enable-shared"
DOCS="AUTHORS COPYING ChangeLog LICENSE NEWS README"
patchfiles=""
compress=txz
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
# 
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build)
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)

if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    download_sources
fi

if [ $opt_config -eq 1 ] ; then
######################################################################
#  source copy build. patch apply in build dir
######################################################################
    if [ -d $B ] ; then rm -rf $B ; fi ;  cp -a $S $B  
    cd $B
    for patch in $patchfiles ; do
       patch -p1 < $W/$patch
    done
    if [ -f autogen.sh ] ; then
       sh ./autogen.sh
    fi

    export PKG_CONFIG_PATH=/usr/lib/pkgconfig:/usr/share/pkgconfig
    export LDFLAGS='-Wl,--as-needed' 
    ./configure --prefix=//usr --sysconfdir=/etc --localstatedir=/var --mandir='${prefix}'/share/man ${OPT_CONFIG}
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
fi

if [ $opt_build -eq 1 ] ; then
    cd $B 
    export LDFLAGS='-Wl,--as-needed'
    make -j3
    if [ $? != 0 ]; then
	echo "build error. $0 script stop"
	exit 255
    fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B

  export LDFLAGS='-Wl,--as-needed'
  make install DESTDIR=$P

  mkdir -p $P/etc/rc.d/init.d
  for i in 0 1 2 3 4 5 ; do
      mkdir -p $P/etc/rc.d/rc${i}.d
  done
  
  cat <<"EOF" > $P/etc/rc.d/init.d/rngd
#!/bin/sh
########################################################################
# Begin scriptname
#
# Description : rngd : Random Number Generation Daemon
#
# Authors     : M.kojima
#
# Version     : Plamo 7.x
#
# Notes       :
#
########################################################################

### BEGIN INIT INFO
# Provides:            rngd
# Required-Start:
# Should-Start:
# Required-Stop:
# Should-Stop:
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: make more radnom entropy
# Description: 
# X-LFS-Provided-By:
### END INIT INFO

. /lib/lsb/init-functions

case "${1}" in
   start)
      log_info_msg "Starting..."
      start_daemon /usr/sbin/rngd -n0
      ;;

   stop)
      log_info_msg "Stopping..."
      killproc /usr/sbin/rngd
      ;;

   restart)
      ${0} stop
      sleep 1
      ${0} start
      ;;

   *)
      echo "Usage: ${0} {start|stop|restart}"
      exit 1
      ;;
esac

exit 0

# End scriptname

EOF
  chmod +x $P/etc/rc.d/init.d/rngd 

  ( cd $P/etc/rc.d/rc0.d ; ln -sf ../init.d/rngd K46rngd )
  ( cd $P/etc/rc.d/rc1.d ; ln -sf ../init.d/rngd K46rngd )
  ( cd $P/etc/rc.d/rc1.d ; ln -sf ../init.d/rngd S18rngd )
  ( cd $P/etc/rc.d/rc2.d ; ln -sf ../init.d/rngd S18rngd )
  ( cd $P/etc/rc.d/rc3.d ; ln -sf ../init.d/rngd S18rngd )
  ( cd $P/etc/rc.d/rc4.d ; ln -sf ../init.d/rngd S18rngd )
  ( cd $P/etc/rc.d/rc5.d ; ln -sf ../init.d/rngd S18rngd )
  
################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man, 
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and 
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
