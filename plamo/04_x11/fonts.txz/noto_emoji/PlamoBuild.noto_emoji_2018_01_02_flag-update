#!/bin/sh
##############################################################
pkgbase='noto_emoji'
vers='2018_01_02'
url="https://github.com/googlei18n/noto-emoji/archive/v${vers//_/-}-flag-update.tar.gz"
verify=""
arch=`uname -m`
build=B1
src="noto-emoji-${vers//_/-}-flag-update"
OPT_CONFIG=""
DOCS='AUTHORS LICENSE README.md emoji_aliases.txt emoji_annotations.txt unknown_flag_aliases.txt'
patchfiles=''
compress=txz
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build{,32})
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)


if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
  download_sources
fi

if [ $opt_config -eq 1 ] ; then
  echo "There is nothing to do."
fi
    
if [ $opt_build -eq 1 ] ; then
  echo "There is nothing to do."
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $S

  # Install fonts
  install -Dm644 -v fonts/*.ttf -t $P/usr/share/fonts/noto/

  # Install conf files
  install -Dm644 -v $W/*.conf -t $P/etc/fonts/conf.avail/
  install -dm755 -v $P/etc/fonts/conf.d/
  for f in $P/etc/fonts/conf.avail/*
  do
    ln -s ../conf.avail/$(basename $f) $P/etc/fonts/conf.d/$(basename $f)
  done

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man, 
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and 
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
