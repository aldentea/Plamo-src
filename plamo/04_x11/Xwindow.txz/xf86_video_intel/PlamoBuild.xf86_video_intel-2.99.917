#!/bin/sh
##############################################################
pkgbase='xf86_video_intel'
vers=
url="https://anongit.freedesktop.org/git/xorg/driver/xf86-video-intel.git"
commitid="75795523003798d789d417e82aaa81c7ea1ed616"
verify=""
arch=`uname -m`
build=B1
src="xf86-video-intel"
OPT_CONFIG='--disable-static --enable-shared --enable-kms-only --enable-uxa --with-default-dri=3'
DOCS='AUTHORS COPYING ChangeLog INSTALL NEWS README'
patchfiles=''
compress=txz
##############################################################

source /usr/share/plamobuild_functions.sh

# Generate $vers
if [ -d $S ]; then
  pushd $S
  vers=$(git describe --tags | sed 's/-/_/g')
  popd
  pkg=${pkgbase}-${vers}-${arch}-${build}
fi

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build{,32})
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)


if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
  download_sources
fi

if [ $opt_config -eq 1 ] ; then
  if [ -d $B ] ; then rm -rf $B ; fi ; mkdir -p $B 
######################################################################
#  don't copy sources, so need patch in the src dir
######################################################################
  cd $S
  for patch in $patchfiles ; do
    if [ ! -f .${patch} ]; then
      patch -p1 < $W/$patch
      touch .${patch}
    fi
  done
  if [ -f autogen.sh ] ; then
    NOCONFIGURE=1 sh ./autogen.sh
  fi

  cd $B
  export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig:/opt/kde/${libdir}/pkgconfig
  export CFLAGS=${CFLAGS/-fno-plt}
  export CXXFLAGS=${CXXFLAGS/-fno-plt}
  export LDFLAGS='-Wl,--as-needed,-z,now' 
  $S/configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var --mandir='${prefix}'/share/man ${OPT_CONFIG}
    
  if [ $? != 0 ]; then
    echo "configure error. $0 script stop"
    exit 255
  fi
fi
    
if [ $opt_build -eq 1 ] ; then
  cd $B
  export CFLAGS=${CFLAGS/-fno-plt}
  export CXXFLAGS=${CXXFLAGS/-fno-plt}
  export LDFLAGS='-Wl,--as-needed,-z,now'
  make
  if [ $? != 0 ]; then
    echo "build error. $0 script stop"
    exit 255
  fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make install DESTDIR=$P

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man, 
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

  mv -v $docdir/$src $docdir/$pkgbase-$vers

#############################
#   convert symlink to null file and 
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  echo "vers = $vers"

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
