#!/bin/sh
##############################################################
pkgbase='lightdm'
vers='1.30.0'
url="https://github.com/CanonicalLtd/lightdm/releases/download/${vers}/lightdm-${vers}.tar.xz"
verify="${url}.asc"
arch=`uname -m`
build=B3
src="${pkgbase}-${vers}"

source /usr/share/plamobuild_functions.sh

OPT_CONFIG="--disable-static --enable-shared --disable-tests
	    --sbindir=/usr/bin --libexecdir=/usr/${libdir}/lightdm
	    --with-greeter-user=lightdm --with-greeter-session=lightdm-gtk-greeter
	    --docdir=/usr/share/doc/${src} "
DOCS='COPYING.GPL3 COPYING.LGPL2 COPYING.LGPL3 NEWS TODO'
patchfiles=''
addfiles="lightdm.init lightdm-session"
compress=txz
##############################################################

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build{,32})
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)


if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
  download_sources
fi

if [ $opt_config -eq 1 ] ; then

  for f in $addfiles $patchfiles
  do
    if [ ! -f $f ]; then
      echo "Required file ($f) is missing."
      exit 255
    fi
  done

  if [ -d $B ] ; then rm -rf $B ; fi ; mkdir -p $B 
######################################################################
#  don't copy sources, so need patch in the src dir
######################################################################
  cd $S
  for patch in $patchfiles ; do
    if [ ! -f .${patch} ]; then
      patch -p1 < $W/$patch
      touch .${patch}
    fi
  done

  sed -i s/systemd/elogind/ data/pam/*

  cd $B
  export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig:/opt/kde/${libdir}/pkgconfig
  export LDFLAGS='-Wl,--as-needed' 
  $S/configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var --mandir='${prefix}'/share/man ${OPT_CONFIG}

  if [ $? != 0 ]; then
    echo "configure error. $0 script stop"
    exit 255
  fi
fi

if [ $opt_build -eq 1 ] ; then
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make -j3
  if [ $? != 0 ]; then
    echo "build error. $0 script stop"
    exit 255
  fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make install DESTDIR=$P

  install -Dm755 -v $W/lightdm-session $P/usr/bin
  rm -rfv $P/etc/init
  rm -rfv $P/etc/apparmor.d

  install -v -dm755 -o 65 -g 65 $P/var/lib/lightdm
  install -v -dm755 -o 65 -g 65 $P/var/lib/lightdm-data
  install -v -dm755 -o 65 -g 65 $P/var/cache/lightdm
  install -v -dm770 -o 65 -g 65 $P/var/log/lightdm

  mkdir -p $P/install
  cat <<EOF >> $P/install/initpkg
if ! grep lightdm /etc/group > /dev/null 2>&1; then
  groupadd -g 65 lightdm
fi
if ! grep lightdm /etc/passwd > /dev/null 2>&1; then
  useradd -c "Lightdm Daemon" \
          -d /var/lib/lightdm \
	  -u 65 -g lightdm \
	  -s /bin/false lightdm
fi
#if ! grep lightdm /etc/environment > /dev/null 2>&1; then
#  echo "add LANG as ja_JP.UTF-8 to /etc/environment."
#  echo "LANG=ja_JP.UTF-8" >> /etc/environment
#fi
EOF

  install -Dm755 -v $W/lightdm.init $P/etc/rc.d/init.d/lightdm
  for i in $(seq 0 6)
  do
      install -dm644 -v $P/etc/rc.d/rc${i}.d
      case $i in
      0|1|2|3|4|6)
        ln -sf ../init.d/lightdm $P/etc/rc.d/rc${i}.d/K05lightdm
	;;
      5)
        ln -sf ../init.d/lightdm $P/etc/rc.d/rc${i}.d/S95lightdm
	;;
      esac
  done
  install -Dm644 -v $W/lightdm.init $docdir/$src/lightdm.init

  # install polkit rule for greeter
  install -Dm644 -v $W/lightdm.rules $P/etc/polkit-1/rules.d/90-lightdm.rules
  install -Dm644 -v $W/lightdm.rules $docdir/$src/lightdm.rules

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man, 
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and 
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
