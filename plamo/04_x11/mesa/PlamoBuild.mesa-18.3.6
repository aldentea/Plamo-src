#!/bin/sh
##############################################################
pkgbase='mesa'
vers='18.3.6'
url="ftp://ftp.freedesktop.org/pub/${pkgbase}/${pkgbase}-${vers}.tar.xz"
arch=`uname -m`
build=B1
src="${pkgbase}-${vers}"
OPT_CONFIG=''
DOCS="docs/* docs/relnote/* docs/specs/*"
patchfiles='mesa-18.1.1-add_xdemos-1.patch'
compress=txz
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
# 
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build{,32})
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)


if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    download_sources
fi
B=`pwd`/build

if [ $opt_config -eq 1 ] ; then
    if [ -d $B ] ; then rm -rf $B ; fi ; mkdir -p $B  
######################################################################
#  don't copy sources, so need patch in the src dir
######################################################################
    cd $S
    for patch in $patchfiles ; do
        if [ ! -f .${patch} ]; then
            patch -p1 < $W/$patch
            touch .${patch}
        fi
    done

    export PKG_CONFIG_PATH=/usr/lib/pkgconfig:/usr/share/pkgconfig
    export LDFLAGS='-Wl,--as-needed'
    export GLL_DRV="i915,r600,r300,nouveau,radeonsi,svga,swrast"

    cd $B
    $S/configure CFLAGS='-O2' CXXFLAGS='-O2'    \
            --prefix=/usr           \
            --sysconfdir=/etc               \
            --enable-texture-float          \
            --enable-osmesa                 \
            --enable-xa                     \
            --enable-glx-tls                \
            --with-platforms="drm,x11,wayland"  \
            --with-gallium-drivers=$GLL_DRV

    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
fi

if [ $opt_build -eq 1 ] ; then
    cd $B
    export LDFLAGS='-Wl,--as-needed'
    make -j3
    if [ $? != 0 ]; then
	echo "build error. $0 script stop"
	exit 255
    fi
    make -C $S/xdemos DEMOS_PREFIX=/usr
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make install DESTDIR=$P
  make -C $S/xdemos DEMOS_PREFIX=/usr DESTDIR=$P install
################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man, 
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and 
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
