#!/bin/sh
##############################################################
pkgbase='js38'
vers='38.2.1'
url="http://archive.ubuntu.com/ubuntu/pool/universe/m/${pkgbase}38/${pkgbase}38_38.2.1~rc0.orig.tar.bz2"
digest="md5sum:cb602e21f5fc798b88163a3aa4e03e0a"
verify=""
arch=`uname -m`
build=B1
src="mozjs-38.0.0"
OPT_CONFIG="--with-intl-api
	--with-system-zlib
	--with-system-ffi
	--with-system-nspr
	--with-system-icu
	--enable-threadsafe
	--enable-readline"
DOCS='INSTALL LICENSE README'
blfspatch="http://www.linuxfromscratch.org/patches/blfs/svn/js38-38.2.1-upstream_fixes-2.patch"
patchfiles="${blfspatch##*/}"
compress=txz
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build{,32})
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)

B=$W/build

if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
  download_sources

  if [ ! -f ${blfspatch##*/} ]; then
    wget $blfspatch
  fi
fi

if [ $opt_config -eq 1 ] ; then
  if [ -d $B ] ; then rm -rf $B ; fi ; cp -a $S $B
######################################################################
#  copy sources into build directory, patch and make in the build dir
######################################################################
  cd $B
  for patch in $patchfiles ; do
    patch -p1 < $W/$patch
  done

  cd js/src
  /usr/bin/autoconf-2.13
  # if [ -f autogen.sh ] ; then
  #   sh ./autogen.sh
  # fi
  export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig:/opt/kde/${libdir}/pkgconfig
  export LDFLAGS='-Wl,--as-needed' 
  ./configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var --mandir='${prefix}'/share/man ${OPT_CONFIG}
    
  if [ $? != 0 ]; then
    echo "configure error. $0 script stop"
    exit 255
  fi
fi
    
if [ $opt_build -eq 1 ] ; then
  cd $B/js/src
  export LDFLAGS='-Wl,--as-needed'
  make -j1
  if [ $? != 0 ]; then
    echo "build error. $0 script stop"
    exit 255
  fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B/js/src
  export LDFLAGS='-Wl,--as-needed'
  make install DESTDIR=$P

  pushd $P/usr/include/mozjs-38
  for link in `find . -type l`; do
    header=`readlink $link`
    rm -f $link
    cp -pv $header $link
    chmod 644 $link
  done
  popd
  
################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man, 
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and 
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
