#!/bin/sh
##############################################################
pkgbase='python_lxml'
vers='4.3.3'
url="https://files.pythonhosted.org/packages/source/l/lxml/lxml-${vers}.tar.gz"
verify=""
arch=`uname -m`
build=B1
src="lxml-${vers}"
OPT_CONFIG=''
DOCS='CHANGES.txt CREDITS.txt INSTALL.txt LICENSES.txt README.rst TODO.txt requirements.txt version.txt'
patchfiles=''
compress=txz
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build{,32})
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)


if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
  download_sources
fi

if [ $opt_config -eq 1 ] ; then
  if [ -d $B ] ; then rm -rf $B ; fi
  for i in 2 3
  do
    echo "==== configure for python${i} ===="
    mkdir -p $B/${i}
    cp -a $S/* $B/${i}/

######################################################################
#  copy srcs to build directory, patch and config in build dir
######################################################################
    cd $B/$i
    for patch in $patchfiles ; do
      patch -p1 < $W/$patch
    done
  done
fi
    
if [ $opt_build -eq 1 ] ; then
  for i in 2 3
  do
    echo "=== build for python${i} ==="
    cd $B/$i
    python${i} setup.py build
    if [ $? != 0 ]; then
      echo "build error for python${i}. $0 script stop"
      exit 255
    fi
  done
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  for i in 2 3
  do
    P=$W/work/$i
    docdir=$P/usr/share/doc
    pkg=python${i}_lxml-${vers}-${arch}-${build}
    if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
    cd $B/$i
    python${i} setup.py install --root $P --skip-build --optimize=1

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man, 
#  install docs and patches, compress them and  chown root.root
################################
    install_tweak

#############################
#   convert symlink to null file and 
#   add "ln -sf" command into install/doinst.sh
################################
    convert_links

    cd $P
    /sbin/makepkg ../../$pkg.$compress <<EOF
y
1
EOF
  done

fi
