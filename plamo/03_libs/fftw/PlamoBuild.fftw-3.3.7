#!/bin/sh
##############################################################
pkgbase='fftw'
vers='3.3.7'
url="http://www.fftw.org/fftw-${vers/_/-}.tar.gz"
verify="http://www.fftw.org/fftw-${vers/_/-}.tar.gz.md5sum"
arch=`uname -m`
build=B1
src="fftw-${vers/_/-}"
OPT_CONFIG='--disable-static --enable-shared --enable-threads'
DOCS='AUTHORS COPYING ChangeLog INSTALL NEWS README TODO'
valiation="normal float"
patchfiles=''
compress=txz
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build{,32})
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)


if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
  download_sources
fi

if [ $opt_config -eq 1 ] ; then
  if [ -d $B ] ; then rm -rf $B ; fi ; mkdir -p $B

  for v in $valiation
  do
    cp -a $S $B/$v
    ######################################################################
    #  don't copy sources, so need patch in the src dir
    ######################################################################
    for patch in $patchfiles ; do
      patch -p1 < $W/$patch
    done

    if [ $v = "float" ]; then
	OPT_CONFIG="$OPT_CONFIG --enable-float"
    fi

    cd $B/$v
    export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig:/opt/kde/${libdir}/pkgconfig
    export LDFLAGS='-Wl,--as-needed' 
    ./configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var --mandir='${prefix}'/share/man ${OPT_CONFIG}
    
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
  done
fi

if [ $opt_build -eq 1 ] ; then
  for v in $valiation
  do
    cd $B/$v
    export LDFLAGS='-Wl,--as-needed'
    make -j3
    if [ $? != 0 ]; then
      echo "build error. $0 script stop"
      exit 255
    fi
  done
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  for v in $valiation
  do
    cd $B/$v
    export LDFLAGS='-Wl,--as-needed'
    make install DESTDIR=$P
  done

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man, 
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and 
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
