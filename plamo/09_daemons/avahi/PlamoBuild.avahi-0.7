#!/bin/sh
##############################################################
pkgbase='avahi'
vers='0.7'
url="https://github.com/lathiat/${pkgbase}/releases/download/v${vers}/${pkgbase}-${vers}.tar.gz"
arch=`uname -m`
build=B4
src="${pkgbase}-${vers}"
OPT_CONFIG='--disable-static --disable-qt3 --disable-qt4 --disable-python --disable-mono --disable-monodoc --with-systemdsystemunitdir=no --with-distro=none'
DOCS='ABOUT-NLS ChangeLog LICENSE README'
patchfiles=''
compress=txz
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
# 
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build{,32})
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)


if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    download_sources
fi

if [ $opt_config -eq 1 ] ; then
    if [ -d $B ] ; then rm -rf $B ; fi ; mkdir -p $B 
######################################################################
#  don't copy sources, so need patch in the src dir
######################################################################
    cd $S
    for patch in $patchfiles ; do
        if [ ! -f .${patch} ]; then
            patch -p1 < $W/$patch
            touch .${patch}
        fi
    done

    cd $B
    export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig:/opt/kde/${libdir}/pkgconfig
    export LDFLAGS='-Wl,--as-needed' 
    $S/configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var --mandir='${prefix}'/share/man ${OPT_CONFIG[$i]}
    
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
fi
    
if [ $opt_build -eq 1 ] ; then
    cd $B
    export LDFLAGS='-Wl,--as-needed'
    make -j3
    if [ $? != 0 ]; then
	echo "build error. $0 script stop"
	exit 255
    fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make install DESTDIR=$P

  mkdir -p $P/etc/rc.d/init.d
  cat <<"EOF" > $P/etc/rc.d/init.d/avahi
#!/bin/sh
########################################################################
# Begin avahi-daemon
#
# Description : Start/Stop avahi-daemon
#
# Authors     : 
#               
#
# Version     : Plamo 7.x
#
########################################################################

### BEGIN INIT INFO
# Provides:          avahi-daemon
# Required-Start:    
# Should-Start:
# Required-Stop:     
# Should-Stop:
# Default-Start:     3 4 5
# Default-Stop:      0 1 2 6
# Short-Description: Starts inetd
# Description:       inetd super daemon
### END INIT INFO

. /lib/lsb/init-functions

case "$1" in
   start)
      log_info_msg "Starting avahi-daemon..."
      start_daemon /usr/sbin/avahi-daemon -D
      evaluate_retval
      ;;

   stop)
      log_info_msg "Stopping avahi-daemon..."
      /usr/sbin/avahi-daemon -k
      evaluate_retval
      ;;

   restart)
      $0 stop
      sleep 1
      $0 start
      ;;

   status)
      statusproc /usr/sbin/avahi-daemon
      ;;

   *)
      echo "Usage: $0 {start|stop|restart|status}"
      exit 1
      ;;
esac

# End /etc/init.d/inetd
EOF

  chmod +x  $P/etc/rc.d/init.d/avahi

  for i in `seq 0 6`; do
      mkdir -p $P/etc/rc.d/rc$i.d
  done
  ( cd $P/etc/rc.d/rc0.d ; ln -sf ../init.d/avahi K15avahi )
  ( cd $P/etc/rc.d/rc1.d ; ln -sf ../init.d/avahi K15avahi )
  ( cd $P/etc/rc.d/rc2.d ; ln -sf ../init.d/avahi K15avahi )
  ( cd $P/etc/rc.d/rc3.d ; ln -sf ../init.d/avahi S50avahi )
  ( cd $P/etc/rc.d/rc4.d ; ln -sf ../init.d/avahi S50avahi )
  ( cd $P/etc/rc.d/rc5.d ; ln -sf ../init.d/avahi S50avahi )
  ( cd $P/etc/rc.d/rc6.d ; ln -sf ../init.d/avahi K15avahi )

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man, 
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and 
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
