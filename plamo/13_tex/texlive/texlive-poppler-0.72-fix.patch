diff -uNr texlive-20180414-source.orig/texk/web2c/luatexdir/image/pdftoepdf.w texlive-20180414-source/texk/web2c/luatexdir/image/pdftoepdf.w
--- texlive-20180414-source.orig/texk/web2c/luatexdir/image/pdftoepdf.w	2018-12-19 16:30:32.341325060 +0900
+++ texlive-20180414-source/texk/web2c/luatexdir/image/pdftoepdf.w	2018-12-19 16:31:01.886800275 +0900
@@ -35,7 +35,7 @@
 
 extern void md5(Guchar *msg, int msgLen, Guchar *digest);
 
-static GBool isInit = gFalse;
+static bool isInit = false;
 
 /* Maintain AVL tree of all PDF files for embedding */
 
@@ -366,7 +366,7 @@
     char *p;
     unsigned char c;
     size_t i, l;
-    p = string->getCString();
+    p = string->c_str();
     l = (size_t) string->getLength();
     if (pdf->cave)
         pdf_out(pdf, ' ');
@@ -468,7 +468,7 @@
         break;
     /*
     case objNum:
-        GBool isNum() { return type == objInt || type == objReal; }
+        bool isNum() { return type == objInt || type == objReal; }
         break;
     */
     case objString:
@@ -587,11 +587,11 @@
     PDFRectangle *pagebox;
     int pdf_major_version_found, pdf_minor_version_found;
     float xsize, ysize, xorig, yorig;
-    if (isInit == gFalse) {
+    if (isInit == false) {
         if (!(globalParams))
             globalParams = new GlobalParams();
-        globalParams->setErrQuiet(gFalse);
-        isInit = gTrue;
+        globalParams->setErrQuiet(false);
+        isInit = true;
     }
     if (img_type(idict) == IMG_TYPE_PDF)
         pdf_doc = refPdfDocument(img_filepath(idict), FE_FAIL);
@@ -966,7 +966,7 @@
     if (PdfDocumentTree != NULL)
         avl_destroy(PdfDocumentTree, destroyPdfDocument);
     PdfDocumentTree = NULL;
-    if (isInit == gTrue)
+    if (isInit == true)
         delete globalParams;
-    isInit = gFalse;
+    isInit = false;
 }
diff -uNr texlive-20180414-source.orig/texk/web2c/luatexdir/lua/lepdflib.cc texlive-20180414-source/texk/web2c/luatexdir/lua/lepdflib.cc
--- texlive-20180414-source.orig/texk/web2c/luatexdir/lua/lepdflib.cc	2018-12-19 16:30:32.341325060 +0900
+++ texlive-20180414-source/texk/web2c/luatexdir/lua/lepdflib.cc	2018-12-19 16:31:01.960130651 +0900
@@ -439,7 +439,7 @@
       break;
     case 1:
       if (lua_isboolean (L,1)) {
-	uout->d = new Object(lua_toboolean(L, 1)? gTrue : gFalse);
+	uout->d = new Object(lua_toboolean(L, 1)? true : false);
 	uout->atype = ALLOC_LEPDF;
 	uout->pc = 0;
 	uout->pd = NULL;
@@ -676,7 +676,7 @@
         pdfdoc_changed_error(L);                               \
     gs = (GooString *)((in *) uin->d)->function();             \
     if (gs != NULL)                                            \
-        lua_pushlstring(L, gs->getCString(), gs->getLength()); \
+        lua_pushlstring(L, gs->c_str(), gs->getLength()); \
     else                                                       \
         lua_pushnil(L);                                        \
     return 1;                                                  \
@@ -911,7 +911,7 @@
     if (i > 0 && i <= len) {
         gs = new GooString();
         if (((Array *) uin->d)->getString(i - 1, gs))
-            lua_pushlstring(L, gs->getCString(), gs->getLength());
+            lua_pushlstring(L, gs->c_str(), gs->getLength());
         else
             lua_pushnil(L);
         delete gs;
@@ -1063,7 +1063,7 @@
     if (i > 0 && i <= len) {
         gs = ((Catalog *) uin->d)->getJS(i - 1);
         if (gs != NULL)
-            lua_pushlstring(L, gs->getCString(), gs->getLength());
+            lua_pushlstring(L, gs->c_str(), gs->getLength());
         else
             lua_pushnil(L);
         delete gs;
@@ -1378,7 +1378,7 @@
     uin = (udstruct *) luaL_checkudata(L, 1, M_GooString);
     if (uin->pd != NULL && uin->pd->pc != uin->pc)
         pdfdoc_changed_error(L);
-    lua_pushlstring(L, ((GooString *) uin->d)->getCString(),
+    lua_pushlstring(L, ((GooString *) uin->d)->c_str(),
                     ((GooString *) uin->d)->getLength());
     return 1;
 }
@@ -1527,9 +1527,9 @@
         pdfdoc_changed_error(L);
     luaL_checktype(L, 2, LUA_TBOOLEAN);
     if (lua_toboolean(L, 2) != 0)
-        *((Object *) uin->d) = Object(gTrue);
+        *((Object *) uin->d) = Object(true);
     else
-        *((Object *) uin->d) = Object(gFalse);
+        *((Object *) uin->d) = Object(false);
     return 0;
 }
 
@@ -1814,7 +1814,7 @@
         pdfdoc_changed_error(L);
     if (((Object *) uin->d)->isString()) {
         gs = (GooString *)((Object *) uin->d)->getString();
-        lua_pushlstring(L, gs->getCString(), gs->getLength());
+        lua_pushlstring(L, gs->c_str(), gs->getLength());
     } else
         lua_pushnil(L);
     return 1;
@@ -2472,7 +2472,7 @@
         pdfdoc_changed_error(L);
     gs = ((PdfDocument *) uin->d)->doc->getFileName();
     if (gs != NULL)
-        lua_pushlstring(L, gs->getCString(), gs->getLength());
+        lua_pushlstring(L, gs->c_str(), gs->getLength());
     else
         lua_pushnil(L);
     return 1;
@@ -2561,7 +2561,7 @@
     if (((PdfDocument *) uin->d)->doc->getCatalog()->isOk()) {
         gs = ((PdfDocument *) uin->d)->doc->readMetadata();
         if (gs != NULL)
-            lua_pushlstring(L, gs->getCString(), gs->getLength());
+            lua_pushlstring(L, gs->c_str(), gs->getLength());
         else
             lua_pushnil(L);
     } else
@@ -3038,12 +3038,12 @@
 
 static int m_Attribute_setHidden(lua_State * L)
 {
-    GBool i;
+    bool i;
     udstruct *uin;
     uin = (udstruct *) luaL_checkudata(L, 1, M_Attribute);
     if (uin->pd != NULL && uin->pd->pc != uin->pc)
         pdfdoc_changed_error(L);
-    i = (GBool) lua_toboolean(L, 2);
+    i = (bool) lua_toboolean(L, 2);
     ((Attribute *) uin->d)->setHidden(i);
     return 0;
 }
@@ -3180,7 +3180,7 @@
 // Ref is false if the C++ functione return false
 static int m_StructElement_getPageRef(lua_State * L)
 {
-    GBool b;
+    bool b;
     Ref *r;
     udstruct *uin, *uout;
     uin = (udstruct *) luaL_checkudata(L, 1, M_StructElement);
@@ -3226,16 +3226,16 @@
 
 static int m_StructElement_getText(lua_State * L)
 {
-    GBool i;
+    bool i;
     GooString *gs;
     udstruct *uin;
     uin = (udstruct *) luaL_checkudata(L, 1, M_StructElement);
     if (uin->pd != NULL && uin->pd->pc != uin->pc)
         pdfdoc_changed_error(L);
-    i = (GBool) lua_toboolean(L, 2);
+    i = (bool) lua_toboolean(L, 2);
     gs =  ((StructElement *) uin->d)->getText(i);
     if (gs != NULL)
-        lua_pushlstring(L, gs->getCString(), gs->getLength());
+        lua_pushlstring(L, gs->c_str(), gs->getLength());
     else
         lua_pushnil(L);
     return 1;
@@ -3321,7 +3321,7 @@
 {
     Attribute::Type t;
     Attribute::Owner o;
-    GBool g;
+    bool g;
     udstruct *uin, *uout;
     const Attribute *a;
     uin = (udstruct *) luaL_checkudata(L, 1, M_StructElement);
@@ -3329,7 +3329,7 @@
         pdfdoc_changed_error(L);
     t = (Attribute::Type) luaL_checkint(L,1);
     o = (Attribute::Owner) luaL_checkint(L,2);
-    g = (GBool) lua_toboolean(L, 3);
+    g = (bool) lua_toboolean(L, 3);
     a = ((StructElement *) uin->d)->findAttribute(t,g,o);
 
     if (a!=NULL){
diff -uNr texlive-20180414-source.orig/texk/web2c/pdftexdir/pdftoepdf-newpoppler.cc texlive-20180414-source/texk/web2c/pdftexdir/pdftoepdf-newpoppler.cc
--- texlive-20180414-source.orig/texk/web2c/pdftexdir/pdftoepdf-newpoppler.cc	2018-12-19 16:30:32.341325060 +0900
+++ texlive-20180414-source/texk/web2c/pdftexdir/pdftoepdf-newpoppler.cc	2018-12-19 16:31:02.790097181 +0900
@@ -120,7 +120,7 @@
 
 static InObj *inObjList;
 static UsedEncoding *encodingList;
-static GBool isInit = gFalse;
+static bool isInit = false;
 
 // --------------------------------------------------------------------
 // Maintain list of open embedded PDF files
@@ -427,7 +427,7 @@
         charset = fontdesc.dictLookup("CharSet");
         if (!charset.isNull() &&
             charset.isString() && is_subsetable(fontmap))
-            epdf_mark_glyphs(fd, (char *)charset.getString()->getCString());
+            epdf_mark_glyphs(fd, (char *)charset.getString()->c_str());
         else
             embed_whole_font(fd);
         addFontDesc(fontdescRef.getRef(), fd);
@@ -566,7 +566,7 @@
         pdf_printf("%s", convertNumToPDF(obj->getNum()));
     } else if (obj->isString()) {
         s = (GooString *)obj->getString();
-        p = s->getCString();
+        p = s->c_str();
         l = s->getLength();
         if (strlen(p) == (unsigned int) l) {
             pdf_puts("(");
@@ -724,8 +724,8 @@
     // initialize
     if (!isInit) {
         globalParams = new GlobalParams();
-        globalParams->setErrQuiet(gFalse);
-        isInit = gTrue;
+        globalParams->setErrQuiet(false);
+        isInit = true;
     }
     // open PDF file
     pdf_doc = find_add_document(image_name);
diff -uNr texlive-20180414-source.orig/texk/web2c/pdftexdir/pdftoepdf-poppler0.68.0.cc texlive-20180414-source/texk/web2c/pdftexdir/pdftoepdf-poppler0.68.0.cc
--- texlive-20180414-source.orig/texk/web2c/pdftexdir/pdftoepdf-poppler0.68.0.cc	2018-12-19 16:30:32.341325060 +0900
+++ texlive-20180414-source/texk/web2c/pdftexdir/pdftoepdf-poppler0.68.0.cc	2018-12-19 16:31:02.793430379 +0900
@@ -121,7 +121,7 @@
 
 static InObj *inObjList;
 static UsedEncoding *encodingList;
-static GBool isInit = gFalse;
+static bool isInit = false;
 
 // --------------------------------------------------------------------
 // Maintain list of open embedded PDF files
@@ -428,7 +428,7 @@
         charset = fontdesc.dictLookup("CharSet");
         if (!charset.isNull() &&
             charset.isString() && is_subsetable(fontmap))
-            epdf_mark_glyphs(fd, (char *)charset.getString()->getCString());
+            epdf_mark_glyphs(fd, (char *)charset.getString()->c_str());
         else
             embed_whole_font(fd);
         addFontDesc(fontdescRef.getRef(), fd);
@@ -567,7 +567,7 @@
         pdf_printf("%s", convertNumToPDF(obj->getNum()));
     } else if (obj->isString()) {
         s = (GooString *)obj->getString();
-        p = s->getCString();
+        p = s->c_str();
         l = s->getLength();
         if (strlen(p) == (unsigned int) l) {
             pdf_puts("(");
@@ -725,8 +725,8 @@
     // initialize
     if (!isInit) {
         globalParams = new GlobalParams();
-        globalParams->setErrQuiet(gFalse);
-        isInit = gTrue;
+        globalParams->setErrQuiet(false);
+        isInit = true;
     }
     // open PDF file
     pdf_doc = find_add_document(image_name);
diff -uNr texlive-20180414-source.orig/texk/web2c/pdftexdir/pdftoepdf-poppler0.69.0.cc texlive-20180414-source/texk/web2c/pdftexdir/pdftoepdf-poppler0.69.0.cc
--- texlive-20180414-source.orig/texk/web2c/pdftexdir/pdftoepdf-poppler0.69.0.cc	2018-12-19 16:30:32.341325060 +0900
+++ texlive-20180414-source/texk/web2c/pdftexdir/pdftoepdf-poppler0.69.0.cc	2018-12-19 16:31:02.796763578 +0900
@@ -120,7 +120,7 @@
 
 static InObj *inObjList;
 static UsedEncoding *encodingList;
-static GBool isInit = gFalse;
+static bool isInit = false;
 
 // --------------------------------------------------------------------
 // Maintain list of open embedded PDF files
@@ -427,7 +427,7 @@
         charset = fontdesc.dictLookup("CharSet");
         if (!charset.isNull() &&
             charset.isString() && is_subsetable(fontmap))
-            epdf_mark_glyphs(fd, (char *)charset.getString()->getCString());
+            epdf_mark_glyphs(fd, (char *)charset.getString()->c_str());
         else
             embed_whole_font(fd);
         addFontDesc(fontdescRef.getRef(), fd);
@@ -566,7 +566,7 @@
         pdf_printf("%s", convertNumToPDF(obj->getNum()));
     } else if (obj->isString()) {
         s = (GooString *)obj->getString();
-        p = s->getCString();
+        p = s->c_str();
         l = s->getLength();
         if (strlen(p) == (unsigned int) l) {
             pdf_puts("(");
@@ -724,8 +724,8 @@
     // initialize
     if (!isInit) {
         globalParams = new GlobalParams();
-        globalParams->setErrQuiet(gFalse);
-        isInit = gTrue;
+        globalParams->setErrQuiet(false);
+        isInit = true;
     }
     // open PDF file
     pdf_doc = find_add_document(image_name);
diff -uNr texlive-20180414-source.orig/texk/web2c/pdftexdir/pdftoepdf.cc texlive-20180414-source/texk/web2c/pdftexdir/pdftoepdf.cc
--- texlive-20180414-source.orig/texk/web2c/pdftexdir/pdftoepdf.cc	2016-11-26 03:24:37.000000000 +0900
+++ texlive-20180414-source/texk/web2c/pdftexdir/pdftoepdf.cc	2018-12-19 16:31:02.776764385 +0900
@@ -139,7 +139,7 @@
 
 static InObj *inObjList;
 static UsedEncoding *encodingList;
-static GBool isInit = gFalse;
+static bool isInit = false;
 
 // --------------------------------------------------------------------
 // Maintain list of open embedded PDF files
@@ -433,7 +433,7 @@
         fd = epdf_create_fontdescriptor(fontmap, zround(stemV->getNum()));
         if (fontdesc->dictLookup("CharSet", &charset) &&
             charset->isString() && is_subsetable(fontmap))
-            epdf_mark_glyphs(fd, charset->getString()->getCString());
+            epdf_mark_glyphs(fd, charset->getString()->c_str());
         else
             embed_whole_font(fd);
         addFontDesc(fontdescRef->getRef(), fd);
@@ -572,7 +572,7 @@
         pdf_printf("%s", convertNumToPDF(obj->getNum()));
     } else if (obj->isString()) {
         s = obj->getString();
-        p = s->getCString();
+        p = s->c_str();
         l = s->getLength();
         if (strlen(p) == (unsigned int) l) {
             pdf_puts("(");
@@ -733,8 +733,8 @@
     // initialize
     if (!isInit) {
         globalParams = new GlobalParams();
-        globalParams->setErrQuiet(gFalse);
-        isInit = gTrue;
+        globalParams->setErrQuiet(false);
+        isInit = true;
     }
     // open PDF file
     pdf_doc = find_add_document(image_name);
diff -uNr texlive-20180414-source.orig/texk/web2c/pdftexdir/pdftosrc-newpoppler.cc texlive-20180414-source/texk/web2c/pdftexdir/pdftosrc-newpoppler.cc
--- texlive-20180414-source.orig/texk/web2c/pdftexdir/pdftosrc-newpoppler.cc	2018-12-19 16:30:32.341325060 +0900
+++ texlive-20180414-source/texk/web2c/pdftexdir/pdftosrc-newpoppler.cc	2018-12-19 16:31:02.796763578 +0900
@@ -109,7 +109,7 @@
             fprintf(stderr, "No SourceName found\n");
             exit(1);
         }
-        outname = (char *)srcName.getString()->getCString();
+        outname = (char *)srcName.getString()->c_str();
         // We cannot free srcName, as objname shares its string.
         // srcName.free();
     } else if (objnum > 0) {
@@ -118,7 +118,7 @@
             fprintf(stderr, "Not a Stream object\n");
             exit(1);
         }
-        sprintf(buf, "%s", fileName->getCString());
+        sprintf(buf, "%s", fileName->c_str());
         if ((p = strrchr(buf, '.')) == 0)
             p = strchr(buf, 0);
         if (objgen == 0)
@@ -128,7 +128,7 @@
         outname = buf;
     } else {                    // objnum < 0 means we are extracting the XRef table
         extract_xref_table = true;
-        sprintf(buf, "%s", fileName->getCString());
+        sprintf(buf, "%s", fileName->c_str());
         if ((p = strrchr(buf, '.')) == 0)
             p = strchr(buf, 0);
         sprintf(p, ".xref");
@@ -173,9 +173,9 @@
 
                 // parse the header: object numbers and offsets
                 objStr.streamReset();
-                str = new EmbedStream(objStr.getStream(), Object(objNull), gTrue, first);
+                str = new EmbedStream(objStr.getStream(), Object(objNull), true, first);
                 lexer = new Lexer(xref, str);
-                parser = new Parser(xref, lexer, gFalse);
+                parser = new Parser(xref, lexer, false);
                 for (n = 0; n < nObjects; ++n) {
                     obj1 = parser->getObj();
                     obj2 = parser->getObj();
diff -uNr texlive-20180414-source.orig/texk/web2c/pdftexdir/pdftosrc.cc texlive-20180414-source/texk/web2c/pdftexdir/pdftosrc.cc
--- texlive-20180414-source.orig/texk/web2c/pdftexdir/pdftosrc.cc	2017-10-17 13:24:27.000000000 +0900
+++ texlive-20180414-source/texk/web2c/pdftexdir/pdftosrc.cc	2018-12-19 16:31:02.633436831 +0900
@@ -106,7 +106,7 @@
             fprintf(stderr, "No SourceName found\n");
             exit(1);
         }
-        outname = srcName.getString()->getCString();
+        outname = srcName.getString()->c_str();
         // We cannot free srcName, as objname shares its string.
         // srcName.free();
     } else if (objnum > 0) {
@@ -115,7 +115,7 @@
             fprintf(stderr, "Not a Stream object\n");
             exit(1);
         }
-        sprintf(buf, "%s", fileName->getCString());
+        sprintf(buf, "%s", fileName->c_str());
         if ((p = strrchr(buf, '.')) == 0)
             p = strchr(buf, 0);
         if (objgen == 0)
@@ -125,7 +125,7 @@
         outname = buf;
     } else {                    // objnum < 0 means we are extracting the XRef table
         extract_xref_table = true;
-        sprintf(buf, "%s", fileName->getCString());
+        sprintf(buf, "%s", fileName->c_str());
         if ((p = strrchr(buf, '.')) == 0)
             p = strchr(buf, 0);
         sprintf(p, ".xref");
@@ -170,9 +170,9 @@
                 // parse the header: object numbers and offsets
                 objStr.streamReset();
                 obj1.initNull();
-                str = new EmbedStream(objStr.getStream(), &obj1, gTrue, first);
+                str = new EmbedStream(objStr.getStream(), &obj1, true, first);
                 lexer = new Lexer(xref, str);
-                parser = new Parser(xref, lexer, gFalse);
+                parser = new Parser(xref, lexer, false);
                 for (n = 0; n < nObjects; ++n) {
                     parser->getObj(&obj1);
                     parser->getObj(&obj2);
