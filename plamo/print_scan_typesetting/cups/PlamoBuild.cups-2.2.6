#!/bin/sh
##############################################################
pkgbase='cups'
vers='2.2.6'
url="https://github.com/apple/${pkgbase}/releases/download/v${vers}/${pkgbase}-${vers}-source.tar.gz"
digest="md5sum:e91c26d8d97b5a1630a962f530f02192"
verify=""
arch=`uname -m`
build=B1
src="${pkgbase}-${vers}"
OPT_CONFIG="--disable-systemd --with-rcdir=/tmp/cupsinit --with-system-groups=lpadmin --with-docdir=/usr/share/cups/docs --with-rundir=/run"
DOCS='CHANGES-1.0.txt CHANGES-1.1.txt CHANGES-1.2.txt CHANGES-1.3.txt CHANGES-1.4.txt CHANGES-1.5.txt CHANGES-1.6.txt CHANGES-1.7.txt CHANGES-2.0.txt CHANGES-2.1.txt INSTALL.md LICENSE.txt README.md'
patchfiles=''
compress=txz
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build{,32})
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)


if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
  download_sources
fi

if [ $opt_config -eq 1 ] ; then
  if [ -d $B ] ; then rm -rf $B ; fi ; cp -a $S $B
######################################################################
#  don't copy sources, so need patch in the src dir
######################################################################
  cd $B
  for patch in $patchfiles ; do
    patch -p1 < $W/$patch
  done
  # if [ -f autogen.sh ] ; then
  #   sh ./autogen.sh
  # fi

  sed -i 's:444:644:' Makedefs.in
  sed -i '/MAN.EXT/s:.gz::' configure config-scripts/cups-manpages.m4
  aclocal  -I config-scripts
  autoconf -I config-scripts

  export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig:/opt/kde/${libdir}/pkgconfig
  export LDFLAGS='-Wl,--as-needed'
  export CC=gcc
  ./configure --prefix=/usr --libdir=/usr/${libdir} --sysconfdir=/etc --localstatedir=/var --mandir='${prefix}'/share/man ${OPT_CONFIG}
    
  if [ $? != 0 ]; then
    echo "configure error. $0 script stop"
    exit 255
  fi
fi
    
if [ $opt_build -eq 1 ] ; then
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make
  if [ $? != 0 ]; then
    echo "build error. $0 script stop"
    exit 255
  fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make install DSTROOT=$P

  install -v -m644 -D $W/cups.init $P/etc/rc.d/init.d/cups
  install -v -m644 -D $W/cups.pam $P/etc/pam.d/cups

  rm -rf $P/tmp

  echo "ServerName /run/cups/cups.sock" > $P/etc/cups/client.conf

  mkdir -p $P/install
  cat <<EOF >> $P/install/initpkg
if [ -x /usr/bin/gtk-update-icon-cache ]; then
  /usr/bin/gtk-update-icon-cache
fi

id -g lpadmin > /dev/null 2>&1
if [ \$? -ne 0 ]; then
  /usr/sbin/groupadd lpadmin
fi
EOF

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man, 
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and 
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
