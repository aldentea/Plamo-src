#!/bin/sh
##############################################################
pkgbase='libvirt'
vers='4.0.0'
url="https://${pkgbase}.org/sources/${pkgbase}-${vers}.tar.xz"
verify=""
arch=`uname -m`
build=B1
src="${pkgbase}-${vers}"
OPT_CONFIG="--disable-static --enable-shared
            --with-storage-lvm --without-xen --with-udev --without-hal
	    --with-qemu-user=libvirt-qemu --with-qemu-group=kvm
	    --with-init-script=redhat --with-macvtap --with-interface"
DOCS='ABOUT-NLS AUTHORS COPYING COPYING.LESSER ChangeLog ChangeLog-old INSTALL NEWS README README.md'
patchfiles=''
compress=txz
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build{,32})
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)


if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
  download_sources
fi

if [ $opt_config -eq 1 ] ; then
  if [ -d $B ] ; then rm -rf $B ; fi ; mkdir -p $B 
######################################################################
#  don't copy sources, so need patch in the src dir
######################################################################
  cd $S
  for patch in $patchfiles ; do
    if [ ! -f .${patch} ]; then
      patch -p1 < $W/$patch
      touch .${patch}
    fi
  done

  for file in $(find . -name '*.py' -print); do
    sed -i 's_#!.*/usr/bin/python_#!/usr/bin/python2_' "${file}"
    sed -i 's_#!.*/usr/bin/env.*python_#!/usr/bin/env python2_' "${file}"
  done
  # if [ -f autogen.sh ] ; then
  #   sh ./autogen.sh
  # fi

  cd $B
  export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig:/opt/kde/${libdir}/pkgconfig
  export LDFLAGS='-Wl,--as-needed -lX11'
  export PYTHON=/usr/bin/python2
  $S/configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var --mandir='${prefix}'/share/man ${OPT_CONFIG}
    
  if [ $? != 0 ]; then
    echo "configure error. $0 script stop"
    exit 255
  fi
fi
    
if [ $opt_build -eq 1 ] ; then
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make -j3
  if [ $? != 0 ]; then
    echo "build error. $0 script stop"
    exit 255
  fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make install DESTDIR=$P

  # init scripts, but default to stop on system start
  install -Dm644 -v $W/libvirtd.init $P/etc/rc.d/init.d/libvirtd
  install -Dm644 -v $W/virtlockd.init $P/etc/rc.d/init.d/virtlockd
  install -Dm644 -v $W/virtlogd.init $P/etc/rc.d/init.d/virtlogd
  install -Dm644 -v $W/libvirtd.conf $P/etc/libvirt/libvirtd.conf

  for i in $(seq 0 6)
  do
    install -dm755 -v $P/etc/rc.d/rc${i}.d
    case $i in
      0|1|2|6)
        ln -sfv ../init.d/libvirtd  $P/etc/rc.d/rc${i}.d/K03libvirtd
	ln -sfv ../init.d/virtlockd $P/etc/rc.d/rc${i}.d/K04virtlockd
	ln -sfv ../init.d/virtlogd  $P/etc/rc.d/rc${i}.d/K04virtlogd
	ln -sfv ../init.d/libvirt-guests $P/etc/rc.d/rc${i}.d/K01libvirt-guests
	;;
      3|4|5)
	ln -sfv ../init.d/libvirtd $P/etc/rc.d/rc${i}.d/S97libvirtd
	ln -sfv ../init.d/virtlockd $P/etc/rc.d/rc${i}.d/S96virtlockd
	ln -sfv ../init.d/virtlogd  $P/etc/rc.d/rc${i}.d/S96virtlogd
	ln -sfv ../init.d/libvirt-guests $P/etc/rc.d/rc${i}.d/S99libvirt-guests
	;;
    esac
  done

  # initscript to docdir
  install -Dm644 -v $W/libvirtd.init $docdir/$src/libvirtd.init
  install -Dm644 -v $W/virtlogd.init $docdir/$src/virtlogd.init
  install -Dm644 -v $W/virtlockd.init $docdir/$src/virtlockd.init
  install -Dm644 -v $W/libvirtd.conf $docdir/$src/libvirtd.conf

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man, 
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and 
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
